{"ast":null,"code":"const express = require('express');\n\nconst cors = require('cors');\n\nconst mysql = require('mysql2');\n\nconst dotenv = require('dotenv');\n\nconst app = express();\ndotenv.config();\nconst port = process.env.PORT || 5000;\napp.use(cors()); //db connection\n\nconst db = mysql.createConnection({\n  host: 'homelw-db.ckjtg3n8r0ue.us-east-1.rds.amazonaws.com',\n  user: 'admin',\n  password: 'sease1996',\n  port: '3306',\n  database: 'home_loungewear'\n});\ndb.connect(err => {\n  if (err) {\n    throw err;\n  }\n\n  console.log('MySql Connected...' + db.state);\n});\nconst query = 'select * from products';\ndb.query(query, (err, res) => {\n  if (err) throw err;else console.log(res);\n});\napp.get('/products', (req, res) => {\n  const query = 'SELECT * FROM products';\n  db.query(query, (err, result) => {\n    if (err) throw err;else res.send(result);\n  });\n});\nexport class dbService {\n  async getAll() {\n    try {\n      const response = await new Promise((resolve, reject) => {\n        const query = \"SELECT * FROM task\";\n        db.query(query, (err, results) => {\n          if (err) reject(new Error(err.message));\n          resolve(results);\n        });\n      }); // console.log(response)\n\n      return response;\n    } catch (err) {\n      console.log(error);\n    }\n  }\n\n} //listening to server\n\napp.listen(port, err => {\n  if (err) console.log(err);else console.log('connect to server');\n});","map":{"version":3,"names":["express","require","cors","mysql","dotenv","app","config","port","process","env","PORT","use","db","createConnection","host","user","password","database","connect","err","console","log","state","query","res","get","req","result","send","dbService","getAll","response","Promise","resolve","reject","results","Error","message","error","listen"],"sources":["/Users/josh/Documents/projects/ecom-to-react/ecom-react-app/src/server.js"],"sourcesContent":["const express =require('express');\nconst cors=require('cors')\nconst mysql=require('mysql2');\nconst dotenv = require('dotenv');\nconst app = express();\ndotenv.config()\nconst port= process.env.PORT || 5000\napp.use(cors())\n//db connection\n\nconst db =mysql.createConnection({\n    host:'homelw-db.ckjtg3n8r0ue.us-east-1.rds.amazonaws.com', \n    user:'admin', \n    password:'sease1996',\n    port: '3306',\n    database: 'home_loungewear'\n });\n\n db.connect((err)=>{\n    if(err){\n        throw err;\n    }\n     console.log('MySql Connected...'+ db.state)\n });\nconst query = 'select * from products'\n db.query(query, (err,res)=>{\n    if(err) throw err\n    else console.log(res)\n })\n\napp.get('/products',(req,res)=>{\n    const query='SELECT * FROM products'\n    db.query(query, (err,result)=>{\n        if(err) throw err\n        else res.send(result)\n    })\n})\nexport class dbService{\n    async getAll(){\n        try{\n            const response = await new Promise((resolve, reject)=>{\n                const query=\"SELECT * FROM task\";\n\n                db.query(query,(err,results)=>{\n                    if(err) reject(new Error(err.message));\n                    resolve(results);\n                })\n            });\n            // console.log(response)\n            return response;\n        }catch(err){\n            console.log(error);\n        }\n    \n    }\n}\n\n\n\n\n\n//listening to server\napp.listen(port, (err)=>{\n    if(err) console.log(err)\n    else console.log('connect to server')\n})"],"mappings":"AAAA,MAAMA,OAAO,GAAEC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,IAAI,GAACD,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAME,KAAK,GAACF,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMI,GAAG,GAAGL,OAAO,EAAnB;AACAI,MAAM,CAACE,MAAP;AACA,MAAMC,IAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAhC;AACAL,GAAG,CAACM,GAAJ,CAAQT,IAAI,EAAZ,E,CACA;;AAEA,MAAMU,EAAE,GAAET,KAAK,CAACU,gBAAN,CAAuB;EAC7BC,IAAI,EAAC,oDADwB;EAE7BC,IAAI,EAAC,OAFwB;EAG7BC,QAAQ,EAAC,WAHoB;EAI7BT,IAAI,EAAE,MAJuB;EAK7BU,QAAQ,EAAE;AALmB,CAAvB,CAAV;AAQCL,EAAE,CAACM,OAAH,CAAYC,GAAD,IAAO;EACf,IAAGA,GAAH,EAAO;IACH,MAAMA,GAAN;EACH;;EACAC,OAAO,CAACC,GAAR,CAAY,uBAAsBT,EAAE,CAACU,KAArC;AACH,CALD;AAMD,MAAMC,KAAK,GAAG,wBAAd;AACCX,EAAE,CAACW,KAAH,CAASA,KAAT,EAAgB,CAACJ,GAAD,EAAKK,GAAL,KAAW;EACxB,IAAGL,GAAH,EAAQ,MAAMA,GAAN,CAAR,KACKC,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACP,CAHD;AAKDnB,GAAG,CAACoB,GAAJ,CAAQ,WAAR,EAAoB,CAACC,GAAD,EAAKF,GAAL,KAAW;EAC3B,MAAMD,KAAK,GAAC,wBAAZ;EACAX,EAAE,CAACW,KAAH,CAASA,KAAT,EAAgB,CAACJ,GAAD,EAAKQ,MAAL,KAAc;IAC1B,IAAGR,GAAH,EAAQ,MAAMA,GAAN,CAAR,KACKK,GAAG,CAACI,IAAJ,CAASD,MAAT;EACR,CAHD;AAIH,CAND;AAOA,OAAO,MAAME,SAAN,CAAe;EACN,MAANC,MAAM,GAAE;IACV,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;QAClD,MAAMX,KAAK,GAAC,oBAAZ;QAEAX,EAAE,CAACW,KAAH,CAASA,KAAT,EAAe,CAACJ,GAAD,EAAKgB,OAAL,KAAe;UAC1B,IAAGhB,GAAH,EAAQe,MAAM,CAAC,IAAIE,KAAJ,CAAUjB,GAAG,CAACkB,OAAd,CAAD,CAAN;UACRJ,OAAO,CAACE,OAAD,CAAP;QACH,CAHD;MAIH,CAPsB,CAAvB,CADD,CASC;;MACA,OAAOJ,QAAP;IACH,CAXD,CAWC,OAAMZ,GAAN,EAAU;MACPC,OAAO,CAACC,GAAR,CAAYiB,KAAZ;IACH;EAEJ;;AAjBiB,C,CAwBtB;;AACAjC,GAAG,CAACkC,MAAJ,CAAWhC,IAAX,EAAkBY,GAAD,IAAO;EACpB,IAAGA,GAAH,EAAQC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAR,KACKC,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACR,CAHD"},"metadata":{},"sourceType":"module"}